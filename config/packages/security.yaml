security:
    enable_authenticator_manager: true
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        user_provider:
            entity:
                class: App\Domain\Model\User
                property: email
#        users_in_memory: { memory: null }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        register:
            pattern: ^/api/users/register
            methods: [ POST ]
            security: false
        activate:
            pattern: ^/api/users/activate
            methods: [ PUT ]
            security: false
        docs:
            pattern: ^/api/doc
            methods: [ GET ]
            security: false
        user-check:
            pattern: ^/api/users/health-check
            methods: [ GET ]
            security: false
        condo-check:
            pattern: ^/api/condos/health-check
            methods: [ GET ]
            security: false
        login:
            pattern: ^/api/login
            stateless: true
#            provider: user_provider
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
#                require_previous_session: false
        api:
            pattern: ^/api
            stateless: true
            jwt: ~
#            guard:
#                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator

    role_hierarchy:
        ROLE_ADMIN: ROLE_SYNDIC
        ROLE_SYNDIC: ROLE_USER
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]
    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
#    access_control:
#        - { path: ^/api/condos, allow_if: "false == request.headers.has('X-Forwarded-For')" }
#        - { path: ^/api/rental, allow_if: "false == request.headers.has('X-Forwarded-For')" }
#        - { path: ^/api/employees/health-check, roles: PUBLIC_ACCESS }
#        - { path: ^/api/doc, roles: PUBLIC_ACCESS }
#        - { path: ^/api/login, roles: PUBLIC_ACCESS }
#        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
